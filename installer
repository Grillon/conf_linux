#!/usr/bin/env bash
source libsh/libError.sh
debug 0
base=$(pwd)
function uninstall {
for action in uninstall_brew uninstall_vimplug uninstall_tpm uninstall_config_ln
do
$action
erreur $? "$action" $ECONT
done

}
function install_brew {
	echo "brew install"
	ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
}

function uninstall_brew {
sudo rm -rf '/home/linuxbrew/'
for fichier in .bashrc .bash_profile .profile
do 
grep -v linuxbrew ~/$fichier >~/${fichier}_
mv ~/${fichier}_ ~/$fichier
done 
}

function config_path {
	grep -qs linuxbrew $HOME/.bashrc
	if [ $? -eq 0 ];then return
	fi
    echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' >>~/.bash_profile
    echo 'export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"' >>~/.bash_profile
    echo 'export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"' >>~/.bash_profile
    export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
}
function install_dependencies_redhat {
	sudo yum -y groupinstall 'Development Tools' && sudo yum -y install curl git irb python-setuptools ruby 
}

function install_dependencies_debian {
sudo apt-get install build-essential curl git python-setuptools ruby
}

function install_vimplug {
	curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
		https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
}

function uninstall_vimplug {
rm -rf ~/.local/share/nvim
}
function install_nvim_tmux {
	brew install neovim/neovim/neovim
	pip2 install neovim
	pip3 install neovim
	gem install neovim
	brew install tmux
}

function install_tpm {
	git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
}

function uninstall_tpm {
rm -rf ~/.tmux
}

function install_nvim_health_stuff {
	brew install gcc
	brew install python
	brew install python3
	brew install ruby
	brew install xclip
	brew install xclip
	brew install xclip
}

function config_terminal {
	cd $base
	infocmp $TERM | sed 's/kbs=^[hH]/kbs=\\177/' > $TERM.ti
	tic $TERM.ti
}

function config_ln {
	cd $HOME/.config
	if [ ! -d nvim_old ];then
		mv nvim nvim_old
	fi
	ln -s $base/.config/nvim
	cd $HOME 
	if [[ ! -f .tmux.conf_old ]]
	then
		mv .tmux.conf .tmux.conf_old
		ln -s $base/.tmux.conf
	fi
	cd $base
}

function uninstall_config_ln {
echo '#pensez a faire :
rm ~/.config/nvim
rm ~/.tmux.conf
'
}

function detect_os {
if [ -f /etc/debian_version ];then
	myos=debian
elif [ -f /etc/redhat-release ];then
	myos=redhat
else
	myos=unknown
fi
}

function auto {
for action in "install_dependencies_$myos" "install_brew" "config_path" "config_path >> $HOME/.bashrc" "source $HOME/.bashrc" "install_nvim_health_stuff" config_terminal install_nvim_tmux install_vimplug install_tpm config_ln
do 
$action
erreur $? "$action" $ESTOP
done
}
detect_os
if [ "$1" == 'all' ];then
	auto
elif [ "$1" == 'uninstall' ];then
uninstall
fi
cd $base
